/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.49.1
  Forc version: 0.40.1
  Fuel-Core version: 0.19.1
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Enum } from "./common";

export enum AuthorizationErrorInput { OnlyMarketControllerAllowed = 'OnlyMarketControllerAllowed' };
export enum AuthorizationErrorOutput { OnlyMarketControllerAllowed = 'OnlyMarketControllerAllowed' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { value: string };
export type ContractIdOutput = ContractIdInput;

export type SynthTokenAbiConfigurables = {
  MARKET_CONTROLLER: IdentityInput;
};

interface SynthTokenAbiInterface extends Interface {
  functions: {
    burn: FunctionFragment;
    mint_to: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'burn', values: [BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'mint_to', values: [BigNumberish, IdentityInput]): Uint8Array;

  decodeFunctionData(functionFragment: 'burn', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'mint_to', data: BytesLike): DecodedValue;
}

export class SynthTokenAbi extends Contract {
  interface: SynthTokenAbiInterface;
  functions: {
    burn: InvokeFunction<[amount: BigNumberish], void>;
    mint_to: InvokeFunction<[amount: BigNumberish, to: IdentityInput], void>;
  };
}
